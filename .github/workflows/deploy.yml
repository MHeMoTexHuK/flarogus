name: Amogus

on: [push, workflow_dispatch]

jobs:
  goToSecurity:
      name: 'Go to security'
      runs-on: ubuntu-latest
      
      steps:
        - name: Make others leave the security room
          uses: styfle/cancel-workflow-action@0.9.0
          with:
            access_token: ${{ github.token }}
  
  emergencyMetting:
    name: 'Get rid of the impostor'
    runs-on: ubuntu-latest
    
    steps:
      - name: Find the impostor via the security room
        uses: actions/checkout@v2
        
      - name: Call the emergency meeting
        run: chmod +x ./gradlew
        
      - name: Eject them from the ship!
        run: ./gradlew deploy; java -jar -Dkotlin.script.classpath=./build/app.jar ./build/app.jar ${{ secrets.TOKEN }}
        
  emergencyMetting1:
    name: 'Get rid of the impostor'
    runs-on: ubuntu-latest
    needs: emergencyMetting
    
    steps:
      - name: Find the impostor via the security room
        uses: actions/checkout@v2
        
      - name: Call the emergency meeting
        run: chmod +x ./gradlew
        
      - name: Eject them from the ship!
        run: ./gradlew deploy; java -jar -Dkotlin.script.classpath=./build/app.jar ./build/app.jar ${{ secrets.TOKEN }}
        
  emergencyMetting2:
    name: 'Get rid of the impostor'
    runs-on: ubuntu-latest
    needs: emergencyMetting1
    
    steps:
      - name: Find the impostor via the security room
        uses: actions/checkout@v2
        
      - name: Call the emergency meeting
        run: chmod +x ./gradlew
        
      - name: Eject them from the ship!
        run: ./gradlew deploy; java -jar -Dkotlin.script.classpath=./build/app.jar ./build/app.jar ${{ secrets.TOKEN }}
        
  emergencyMetting3:
    name: 'Get rid of the impostor'
    runs-on: ubuntu-latest
    needs: emergencyMetting2
    
    steps:
      - name: Find the impostor via the security room
        uses: actions/checkout@v2
        
      - name: Call the emergency meeting
        run: chmod +x ./gradlew
        
      - name: Eject them from the ship!
        run: ./gradlew deploy; java -jar -Dkotlin.script.classpath=./build/app.jar ./build/app.jar ${{ secrets.TOKEN }}
        
  emergencyMetting4:
    name: 'Get rid of the impostor'
    runs-on: ubuntu-latest
    needs: emergencyMetting3
    
    steps:
      - name: Find the impostor via the security room
        uses: actions/checkout@v2
        
      - name: Call the emergency meeting
        run: chmod +x ./gradlew
        
      - name: Eject them from the ship!
        run: ./gradlew deploy; java -jar -Dkotlin.script.classpath=./build/app.jar ./build/app.jar ${{ secrets.TOKEN }}
        
  emergencyMetting5:
    name: 'Get rid of the impostor'
    runs-on: ubuntu-latest
    needs: emergencyMetting4
    
    steps:
      - name: Find the impostor via the security room
        uses: actions/checkout@v2
        
      - name: Call the emergency meeting
        run: chmod +x ./gradlew
        
      - name: Eject them from the ship!
        run: ./gradlew deploy; java -jar -Dkotlin.script.classpath=./build/app.jar ./build/app.jar ${{ secrets.TOKEN }}
        
  emergencyMetting6:
    name: 'Get rid of the impostor'
    runs-on: ubuntu-latest
    needs: emergencyMetting5
    
    steps:
      - name: Find the impostor via the security room
        uses: actions/checkout@v2
        
      - name: Call the emergency meeting
        run: chmod +x ./gradlew
        
      - name: Eject them from the ship!
        run: ./gradlew deploy; java -jar -Dkotlin.script.classpath=./build/app.jar ./build/app.jar ${{ secrets.TOKEN }}
        
  emergencyMetting7:
    name: 'Get rid of the impostor'
    runs-on: ubuntu-latest
    needs: emergencyMetting6
    
    steps:
      - name: Find the impostor via the security room
        uses: actions/checkout@v2
        
      - name: Call the emergency meeting
        run: chmod +x ./gradlew
        
      - name: Eject them from the ship!
        run: ./gradlew deploy; java -jar -Dkotlin.script.classpath=./build/app.jar ./build/app.jar ${{ secrets.TOKEN }}
        
      